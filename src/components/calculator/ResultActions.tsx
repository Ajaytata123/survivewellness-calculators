
import React from 'react';
import { Button } from '@/components/ui/button';
import { Download, Share } from 'lucide-react';
import { ResultForDownload, UnitSystem } from '@/types/calculatorTypes';
import { 
  shareResults, 
  downloadResultsAsCSV
} from '@/utils/downloadUtils';
import { showSuccessToast, showErrorToast } from '@/utils/notificationUtils';

interface ResultActionsProps {
  title: string;
  results: Record<string, string | number>;
  fileName: string;
  userName?: string;
  unitSystem: UnitSystem;
  className?: string;
  referenceText?: string;
}

const ResultActions: React.FC<ResultActionsProps> = ({
  title,
  results,
  fileName,
  userName,
  unitSystem,
  className,
  referenceText
}) => {
  const prepareResults = (): ResultForDownload => {
    return {
      title,
      date: new Date().toLocaleDateString(),
      unitSystem,
      userName: userName || 'User',
      results
    };
  };

  const handleShareResults = async () => {
    try {
      const resultsData = prepareResults();
      
      // Create share text
      const shareText = `${resultsData.title}\n\nResults for: ${resultsData.userName}\nDate: ${resultsData.date}\n\n${Object.entries(resultsData.results).map(([key, value]) => `${key}: ${value}`).join('\n')}\n\nGenerated by Survivewellness Calculator`;
      
      // Use Web Share API if available (mobile devices)
      if (navigator.share) {
        await navigator.share({
          title: resultsData.title,
          text: shareText,
          url: window.location.href
        });
        showSuccessToast('Results shared successfully!');
      } else {
        // Fallback: Create mailto and WhatsApp links
        const encodedText = encodeURIComponent(shareText);
        const currentUrl = encodeURIComponent(window.location.href);
        
        // Create a temporary menu
        const shareMenu = document.createElement('div');
        shareMenu.style.position = 'fixed';
        shareMenu.style.top = '50%';
        shareMenu.style.left = '50%';
        shareMenu.style.transform = 'translate(-50%, -50%)';
        shareMenu.style.background = 'white';
        shareMenu.style.border = '2px solid #ccc';
        shareMenu.style.borderRadius = '8px';
        shareMenu.style.padding = '20px';
        shareMenu.style.zIndex = '10000';
        shareMenu.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
        
        shareMenu.innerHTML = `
          <h3 style="margin: 0 0 15px 0; text-align: center;">Share Results</h3>
          <div style="display: flex; flex-direction: column; gap: 10px;">
            <a href="mailto:?subject=${encodeURIComponent(resultsData.title)}&body=${encodedText}" 
               style="padding: 10px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; text-align: center;">
               üìß Email
            </a>
            <a href="https://wa.me/?text=${encodedText}" 
               target="_blank"
               style="padding: 10px; background: #25d366; color: white; text-decoration: none; border-radius: 5px; text-align: center;">
               üí¨ WhatsApp
            </a>
            <button onclick="navigator.clipboard.writeText('${shareText.replace(/'/g, "\\'")}').then(() => alert('Copied to clipboard!')); document.body.removeChild(this.parentElement.parentElement)"
                    style="padding: 10px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer;">
               üìã Copy to Clipboard
            </button>
            <button onclick="document.body.removeChild(this.parentElement.parentElement)"
                    style="padding: 10px; background: #dc3545; color: white; border: none; border-radius: 5px; cursor: pointer;">
               ‚ùå Cancel
            </button>
          </div>
        `;
        
        document.body.appendChild(shareMenu);
      }
      
      console.log('Share menu created successfully');
    } catch (error) {
      console.error('Error sharing results:', error);
      showErrorToast('Failed to share results. Please try again.');
    }
  };

  const handleDownloadResults = () => {
    try {
      const resultsData = prepareResults();
      downloadResultsAsCSV(resultsData, fileName);
      showSuccessToast('Results downloaded successfully!');
      console.log('Results downloaded successfully');
    } catch (error) {
      console.error('Error downloading results:', error);
      showErrorToast('Failed to download results. Please try again.');
    }
  };

  return (
    <div className={`space-y-6 ${className || ''}`}>
      <div className="mt-6 mb-4">
        {referenceText && (
          <div className="mb-4 p-4 bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-xl shadow-sm">
            <p className="text-blue-800 text-sm font-medium leading-relaxed">
              {referenceText}
            </p>
          </div>
        )}
        
        <div className="bg-gradient-to-br from-violet-50 via-purple-50 to-pink-50 rounded-xl p-6 border border-violet-200 shadow-lg">
          <div className="flex flex-wrap gap-3 justify-center mb-4">
            <Button 
              variant="outline" 
              className="flex items-center gap-2 bg-gradient-to-r from-purple-50 to-violet-50 text-purple-700 border-purple-300 hover:from-purple-100 hover:to-violet-100 hover:border-purple-400 hover:text-purple-800 shadow-sm hover:shadow-md transition-all duration-300 touch-manipulation font-medium"
              onClick={handleShareResults}
              type="button"
            >
              <Share className="h-4 w-4" />
              Share Results
            </Button>
            <Button 
              variant="outline" 
              className="flex items-center gap-2 bg-gradient-to-r from-green-50 to-emerald-50 text-green-700 border-green-300 hover:from-green-100 hover:to-emerald-100 hover:border-green-400 hover:text-green-800 shadow-sm hover:shadow-md transition-all duration-300 touch-manipulation font-medium"
              onClick={handleDownloadResults}
              type="button"
            >
              <Download className="h-4 w-4" />
              Download CSV
            </Button>
          </div>
          
          <div className="text-center border-t border-violet-200 pt-4">
            <div className="bg-white rounded-lg p-3 shadow-sm border border-violet-100">
              <p className="text-purple-700 font-bold mb-1 text-lg">Thank you for using Survivewellness!</p>
              <p className="text-sm text-gray-600">For more calculators please visit our dedicated calculators section</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ResultActions;
